name: Android 64-bit Release

on:
  push:
    branches:
      - '*'        # 所有分支
    tags:
      - 'v*'       # 所有 v 开头的标签
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 5.15.2
  BUILD_TYPE: ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_') ] }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: 'false'
        continue-on-error: true

      - name: Fetch all tags
        run: git fetch --all --tags -f --depth 1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: linux
          target: android
          dir: ${{ runner.temp }}
          modules: qtcharts
          setup-python: true

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Remove other Android SDKs (keep only android-33)
        run: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --list_installed | grep "platforms;android-" | grep -v "platforms;android-33 " | awk '{print $1}' | xargs -I {} ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --uninstall "{}"

      - name: Install ccache
        run: sudo apt-get install ccache

      - name: Setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 5" >> ~/.ccache/ccache.conf
          ccache -z

      - name: Create build directory
        run: mkdir -p ${{ runner.temp }}/shadow_build_dir

      - name: Download GStreamer
        run: |
          wget --quiet https://gstreamer.freedesktop.org/data/pkg/android/1.18.6/gstreamer-1.0-android-universal-1.18.6.tar.xz
          mkdir gstreamer
          tar -xf gstreamer-1.0-android-universal-1.18.6.tar.xz -C gstreamer

      - name: Update android manifest (if not stable)
        if: github.ref_name != 'Stable'
        run: ${SOURCE_DIR}/tools/update_android_manifest_package.sh ${{ github.ref_name }}

      - name: Build APK (arm64-v8a)
        working-directory: ${{ runner.temp }}/shadow_build_dir
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          qmake -r ${SOURCE_DIR}/qgroundcontrol.pro -spec android-clang CONFIG+=${BUILD_TYPE} CONFIG+=installer ANDROID_ABIS="arm64-v8a"
          make -j$(nproc)

      - name: Find and rename APK
        run: |
          mkdir -p ${{ runner.temp }}/shadow_build_dir/package
          find . -name "*.apk" -exec cp {} ${{ runner.temp }}/shadow_build_dir/package/QGroundControl64.apk \;

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QGroundControl64.apk
          path: ${{ runner.temp }}/shadow_build_dir/package/QGroundControl64.apk

      - name: Publish to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ runner.temp }}/shadow_build_dir/package/QGroundControl64.apk
          asset_name: QGroundControl64.apk
          tag: ${{ github.ref }}
          overwrite: true
